/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> =
    T extends ColumnType<infer S, infer I, infer U>
        ? ColumnType<S, I | undefined, U>
        : ColumnType<T, T | undefined, T>;

export type ProposalStatus =
    | "cancelled"
    | "expired"
    | "open"
    | "passed"
    | "passed_changed"
    | "passed_urgent"
    | "rejected"
    | "resting";

export type ProposalType =
    | "citizen"
    | "government"
    | "mp_debate"
    | "mp_law"
    | "mp_petition";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export type Vote = "absent" | "abstain" | "no" | "yes";

export interface AgendaItems {
    id: number;
    parliament_id: string;
    session_id: string | null;
    title: string;
}

export interface Ballots {
    id: number;
    minutes_url: string | null;
    parliament_id: string | null;
    results_url: string | null;
    session_item_title: string | null;
    start_time: Timestamp | null;
    title: string | null;
}

export interface CommitteeBudgetReports {
    committee_name: string;
    id: string;
    proposal_id: string;
}

export interface CommitteeReports {
    committee_name: string;
    date: Timestamp;
    id: string;
    law_changes: string | null;
    opinion: string;
    proposal_id: string;
    proposal_summary: string;
    reasoning: string | null;
}

export interface CommitteeReportSignatures {
    committee_report_id: string;
    person_id: number;
}

export interface Committees {
    name: string;
}

export interface ElectionSeasons {
    end_year: Timestamp;
    start_year: Timestamp;
}

export interface Interests {
    category: string | null;
    id: Generated<number>;
    interest: string | null;
    person_id: number | null;
}

export interface Ministers {
    cabinet_id: string | null;
    end_date: Timestamp | null;
    ministry: string;
    person_id: number;
    start_date: Timestamp;
}

export interface MpCommitteeMemberships {
    committee_name: string;
    end_date: Timestamp | null;
    person_id: number;
    role: string;
    start_date: Timestamp;
}

export interface MpParliamentaryGroupMemberships {
    end_date: Timestamp | null;
    person_id: number;
    pg_id: string;
    start_date: Timestamp;
}

export interface Objections {
    committee_report_id: string | null;
    id: Generated<number>;
    motion: string | null;
    reasoning: string | null;
}

export interface ObjectionSignatures {
    objection_id: Generated<number>;
    person_id: number;
}

export interface ParliamentaryGroups {
    id: string;
    name: string | null;
}

export interface Persons {
    email: string | null;
    first_name: string | null;
    full_name: string | null;
    id: number;
    last_name: string | null;
    occupation: string | null;
    phone_number: string | null;
    photo: string | null;
    place_of_birth: string | null;
    place_of_residence: string | null;
    year_of_birth: number | null;
}

export interface Proposals {
    date: Timestamp;
    id: string;
    law_changes: string | null;
    ptype: ProposalType | null;
    reasoning: string | null;
    status: ProposalStatus;
    summary: string | null;
    title: string | null;
}

export interface ProposalSignatures {
    first: boolean | null;
    person_id: number;
    proposal_id: string;
}

export interface Sessions {
    date: Timestamp;
    id: string;
}

export interface Speeches {
    id: string;
    parliament_id: string;
    person_id: number;
    response_to: string | null;
    speech: string;
    start_time: Timestamp;
}

export interface Votes {
    ballot_id: number;
    person_id: number;
    vote: Vote | null;
}

export interface ModeVotes {
    pg_id: string;
    ballot_id: number;
    mode_vote: Vote;
    count: number;
}

export interface ContraVoteScores {
    person_id: number;
    contra_vote_score: number;
}

export interface DB {
    agenda_items: AgendaItems;
    ballots: Ballots;
    committee_budget_reports: CommitteeBudgetReports;
    committee_report_signatures: CommitteeReportSignatures;
    committee_reports: CommitteeReports;
    committees: Committees;
    election_seasons: ElectionSeasons;
    interests: Interests;
    ministers: Ministers;
    mp_committee_memberships: MpCommitteeMemberships;
    mp_parliamentary_group_memberships: MpParliamentaryGroupMemberships;
    objection_signatures: ObjectionSignatures;
    objections: Objections;
    parliamentary_groups: ParliamentaryGroups;
    persons: Persons;
    proposal_signatures: ProposalSignatures;
    proposals: Proposals;
    sessions: Sessions;
    speeches: Speeches;
    votes: Votes;
    mode_votes_view: ModeVotes;
    contra_vote_scores_view: ContraVoteScores;
}
