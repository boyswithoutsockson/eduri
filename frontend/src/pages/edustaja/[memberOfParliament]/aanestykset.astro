---
import type { NotNull } from "kysely";
import { db } from "~src/database";
import Layout from "~src/layouts/Layout.astro";
import { getAllMps } from "~src/pages/edustaja/[memberOfParliament]/_utils";
import { PARLIAMENT_BASE_URL, VOTE_MAP } from "~src/utils";

/** List all items of data that need a page generated for them */
export async function getStaticPaths() {
    const data = await getAllMps();
    return data.map((mp) => ({
        params: { memberOfParliament: mp.full_name || "" },
        props: { mp },
    }));
}

const { mp } = Astro.props;

const ballotVotes = mp
    ? await db
          .selectFrom("votes")
          .where("votes.mp_id", "=", mp.id)
          .where("votes.vote", "is not", null)
          .leftJoin("ballots", "votes.ballot_id", "ballots.id")
          .select([
              "ballots.id",
              "ballots.title",
              "ballots.session_item_title",
              "votes.vote",
              "ballots.minutes_url",
              "ballots.results_url",
          ])
          .orderBy("ballots.start_time", "desc")
          .$narrowType<{ vote: NotNull }>()
          .execute()
    : [];
---

<Layout>
    <main>
        <section>
            <h2>Äänestykset</h2>
            <div class="ballot-votes">
                {
                    ballotVotes.map((bv) => (
                        <div class="ballot-vote">
                            <strong>{bv.title}</strong> |
                            <a href={`${PARLIAMENT_BASE_URL}${bv.minutes_url}`}>
                                Pöytäkirja
                            </a>{" "}
                            |
                            <a href={`${PARLIAMENT_BASE_URL}${bv.results_url}`}>
                                Äänestystulos
                            </a>
                            <br />
                            {bv.session_item_title}
                            <br />
                            Ääni:
                            <span class:list={bv.vote}>
                                {VOTE_MAP[bv.vote]}
                            </span>
                        </div>
                    ))
                }
            </div>
        </section>
    </main>
</Layout>

<style>
    .ballot-votes {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .ballot-vote {
        padding: 0.5rem;
        border-radius: 8px;
        border: 2px solid #504646d0;
        margin-bottom: 0.5rem;
    }

    /* Colors for votes named after the vote value */
    .yes {
        background-color: #1ea850;
        border-radius: 4px;
        padding: 0.1rem 0.5rem;
        color: black;
    }

    .no {
        background-color: #d9304c;
        border-radius: 4px;
        padding: 0.1rem 0.5rem;
        color: black;
    }

    .abstain {
        background-color: #fbbc05;
        border-radius: 4px;
        padding: 0.1rem 0.5rem;
        color: black;
    }

    .absent {
        background-color: #f1f3f4;
        border-radius: 4px;
        padding: 0.1rem 0.5rem;
        color: black;
    }
</style>
