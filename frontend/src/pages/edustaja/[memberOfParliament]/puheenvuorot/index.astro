---
import { db } from "~src/database";
import Layout from "~src/pages/edustaja/[memberOfParliament]/_layout.astro";
import { getAllMps } from "~src/pages/edustaja/[memberOfParliament]/_utils";

/** List all items of data that need a page generated for them */
export async function getStaticPaths() {
    const data = await getAllMps();
    return data.map((mp) => ({
        params: { memberOfParliament: mp.full_name || "" },
        props: { mp },
    }));
}

const { mp } = Astro.props;

const speeches = mp
    ? await db
          .selectFrom("speeches")
          .where("speeches.mp_id", "=", mp.id)
          .select(["id", "mp_id", "parliament_id", "start_time", "speech"])
          .execute()
    : [];
---

<Layout mp={mp}>
    <section>
        <h2>Puheenvuorot</h2>
        {
            speeches.length > 0 ? (
                <ul>
                    {speeches.map((speech) => (
                        <li>
                            <p>
                                <strong>Parliament ID:</strong>{" "}
                                {speech.parliament_id}
                            </p>
                            <p>
                                <strong>Aloitusaika:</strong>{" "}
                                {speech.start_time?.toLocaleDateString()}
                            </p>
                            <p>
                                <strong>Puhe:</strong> {speech.speech}
                            </p>
                            <p>
                                <a
                                    href={`/edustaja/${encodeURIComponent(mp.full_name ?? "")}/puheenvuorot/${speech.id}`}
                                >
                                    Read more
                                </a>
                            </p>
                        </li>
                    ))}
                </ul>
            ) : (
                <p>Tällä edustajalla ei ole puheenvuoroja.</p>
            )
        }
    </section>
</Layout>
