---
import { db } from "~src/database";
import { groupBy } from "~src/utils";
import Layout from "~src/pages/edustaja/[memberOfParliament]/_layout.astro";
import { getAllMps } from "~src/pages/edustaja/[memberOfParliament]/_utils";

/** List all items of data that need a page generated for them */
export async function getStaticPaths() {
    const data = await getAllMps();
    return data.map((mp) => ({
        params: { memberOfParliament: mp.full_name || "" },
        props: { mp },
    }));
}

const { mp } = Astro.props;

const interests = mp
    ? await db
          .selectFrom("interests")
          .where("interests.mp_id", "=", mp.id)
          .where("interests.category", "in", [
              "Hallinto- ja luottamustehtävät yksityisissä yrityksissä, yhteisöissä sekä julkisyhteisöissä",
              "Valtion, kunnan ja muiden julkisyhteisöjen virat",
          ])
          .select(["interests.category", "interests.interest"])
          .execute()
    : [];

const groupedInterests = groupBy(interests, (i) => i.category ?? "");

const committees = mp
    ? await db
          .selectFrom("mp_committee_memberships")
          .where("mp_committee_memberships.mp_id", "=", mp.id)
          .select(["committee_name", "start_date", "end_date", "role"])
          .execute()
    : [];

const groupedCommittees = groupBy(
    committees,
    (c) => c.committee_name ?? ""
);
---

<Layout mp={mp}>
    <section>
        <h2>Valiokunnat</h2>
        {
            Object.entries(groupedCommittees).map(([committeeName, committeeData]) => (
                <section>
                    <strong>{committeeName}</strong>
                    <ul>
                        {committeeData.map((committee) => (
                            <li>
                                {committee.role} | {committee.start_date.toLocaleDateString()} - {committee.end_date ? committee.end_date.toLocaleDateString() : "Nykyinen"}
                            </li>
                        ))}
                    </ul>
                </section>
            ))
        }
    </section>
    <section>
        <h2>Sidonnaisuudet</h2>
        {
            Object.entries(groupedInterests).map(([group, interests]) => (
                <section>
                    <strong>{group}</strong>
                    <ul>
                        {interests.map((int) => (
                            <li>{int.interest}</li>
                        ))}
                    </ul>
                </section>
            ))
        }
    </section>
</Layout>
